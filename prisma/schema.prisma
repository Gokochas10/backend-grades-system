generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model materia_estudiantes {
  id             Int      @id @default(autoincrement())
  materia_id     Int
  estudiante_uid String   @db.VarChar(255)
  usuarios       usuarios @relation(fields: [estudiante_uid], references: [uid], onDelete: Cascade, onUpdate: NoAction, map: "fk_estudiante")
  materias       materias @relation(fields: [materia_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_materia")

  @@unique([materia_id, estudiante_uid], map: "unique_materia_estudiante")
}

model materias {
  id                  Int                   @id @default(autoincrement())
  nombre              String                @db.VarChar(255)
  profesor_uid        String                @db.VarChar(255)
  materia_estudiantes materia_estudiantes[]
  usuarios            usuarios              @relation(fields: [profesor_uid], references: [uid], onDelete: Cascade, onUpdate: NoAction, map: "fk_profesor")
  recursos            recursos[]
  tareas              tareas[]
}

model recursos {
  id         Int      @id @default(autoincrement())
  materia_id Int
  nombre     String   @db.VarChar(255)
  materias   materias @relation(fields: [materia_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_recurso_materia")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model tarea_estudiantes {
  id             Int      @id @default(autoincrement())
  tarea_id       Int
  estudiante_uid String   @db.VarChar(255)
  estado         Boolean?  @default(false)
  tareas         tareas   @relation(fields: [tarea_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tarea")
  usuarios       usuarios @relation(fields: [estudiante_uid], references: [uid], onDelete: Cascade, onUpdate: NoAction, map: "fk_tarea_estudiante")

  @@unique([tarea_id, estudiante_uid], map: "unique_tarea_estudiante")
}

model tareas {
  id                Int                 @id @default(autoincrement())
  materia_id        Int
  nombre            String              @db.VarChar(255)
  descripcion       String              @db.Text
  tarea_estudiantes tarea_estudiantes[]
  materias          materias            @relation(fields: [materia_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fk_tarea_materia")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model usuarios {
  uid                 String                @id @db.VarChar(255)
  correo              String                @unique @db.VarChar(255)
  rol                 String                @db.VarChar(50)
  materia_estudiantes materia_estudiantes[]
  materias            materias[]
  tarea_estudiantes   tarea_estudiantes[]
}
